<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="30 seconds">

    <!-- Console -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{10} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- Logstash -->
    <appender name="LOGSTASH" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
        <destination>localhost:5000</destination>
        <encoder class="net.logstash.logback.encoder.LogstashEncoder">
            <customFields>{"appname":"appname","profile":"local"}</customFields>
        </encoder>
    </appender>
    
    <!-- file -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
	   <file>./logs/info.log</file> <!-- 파일을 저장할 경로를 정한다 -->
	   <filter class="ch.qos.logback.classic.filter.LevelFilter">
	     <level>INFO</level>
	     <onMatch>ACCEPT</onMatch> <!-- 해당 레벨만 기록한다. -->
	     <onMismatch>DENY</onMismatch> <!-- 다른 수준의 레벨은 기록하지 않는다.(상위 레벨도 기록 안함), 상위 수준의 레벨에 대한 기록을 원하면 ACCEPT 로 하면 기록된다. -->
	   </filter> <!-- 레벨별 필터링이 필요없을 경우 filter class 관련된 부분을 삭제하면 됨-->
	   <encoder>
	     <pattern>[%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%thread] %-5level %logger{35} - %msg%n</pattern> <!-- 해당 패턴 네이밍으로 현재 로그가 기록됨 -->
	   </encoder>
	   <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
	     <fileNamePattern>./was-logs/info.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern> <!-- 해당 패턴 네이밍으로 이전 파일이 기록됨 -->
	     <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
	       <maxFileSize>100MB</maxFileSize> <!-- 한 파일의 최대 용량 -->
	     </timeBasedFileNamingAndTriggeringPolicy>
	     <maxHistory>180</maxHistory> <!-- 한 파일의 최대 저장 기한 -->
	   </rollingPolicy>
	</appender>

    <root level="info">
        <appender-ref ref="CONSOLE" />
        <!-- <appender-ref ref="LOGSTASH" /> -->
        <appender-ref ref="FILE" />
    </root>
</configuration>