plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	// querydsl settings 1
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'org.zerock'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'

//	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
//	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
//	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// JDBC 는 maven 에서 검색해서 찾아온다.
	// https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
	implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.1.4'

	/* querydsl settings 2 */
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0' //Querydsl NoResultException 대응
	implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	implementation "com.querydsl:querydsl-jpa"
	implementation "com.querydsl:querydsl-core"
	implementation "com.querydsl:querydsl-collections"
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
	annotationProcessor("jakarta.annotation:jakarta.annotation-api") // java.lang.NoClassDefFoundError (javax.annotation.Generated) 대응 코드
	annotationProcessor("jakarta.persistence:jakarta.persistence-api") // java.lang.NoClassDefFoundError (javax.annotation.Entity) 대응 코드
	/* /querydsl settings 2 */
}

tasks.named('test') {
	useJUnitPlatform()
}

/* Querydsl 설정부 3 */
def querydslDir = "$buildDir/generated/querydsl" //Repository 확장을 위한 Querydsl 설정
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

querydsl {
	jpa = true
//	querydslSourcesDir = generated
	querydslSourcesDir = querydslDir //Repository 확장을 위한 Querydsl 설정
}

// java source set 에 querydsl QClass 위치 추가
//sourceSets {
//	main.java.srcDirs += [ generated ]
//}

sourceSets {
	main.java.srcDirs querydslDir //Repository 확장을 위한 Querydsl 설정
}

// complieQuerydsl Task에 clean 동작 추가
tasks.compileQuerydsl.dependsOn(clean);

configurations {
	compileOnly { //Repository 확장 안되면 여기 확인해보자..
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl //Repository 확장을 위한 Querydsl 설정
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}

/* /Querydsl 설정부 */